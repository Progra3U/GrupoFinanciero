//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace S04Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EntidadFinancieraEntities : DbContext
    {
        public EntidadFinancieraEntities()
            : base("name=EntidadFinancieraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BancoExteno> BancoExteno { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Servicio> Servicio { get; set; }
        public DbSet<Transaccion> Transaccion { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
    
        public virtual int pa_BancoExteno_Delete(string cuentaBancoEx)
        {
            var cuentaBancoExParameter = cuentaBancoEx != null ?
                new ObjectParameter("CuentaBancoEx", cuentaBancoEx) :
                new ObjectParameter("CuentaBancoEx", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_BancoExteno_Delete", cuentaBancoExParameter);
        }
    
        public virtual int pa_BancoExteno_Insert(string cuentaBancoEx, string cuentaInterna, string detalleTrans, Nullable<System.DateTime> horayFecha, Nullable<int> monto)
        {
            var cuentaBancoExParameter = cuentaBancoEx != null ?
                new ObjectParameter("CuentaBancoEx", cuentaBancoEx) :
                new ObjectParameter("CuentaBancoEx", typeof(string));
    
            var cuentaInternaParameter = cuentaInterna != null ?
                new ObjectParameter("CuentaInterna", cuentaInterna) :
                new ObjectParameter("CuentaInterna", typeof(string));
    
            var detalleTransParameter = detalleTrans != null ?
                new ObjectParameter("DetalleTrans", detalleTrans) :
                new ObjectParameter("DetalleTrans", typeof(string));
    
            var horayFechaParameter = horayFecha.HasValue ?
                new ObjectParameter("HorayFecha", horayFecha) :
                new ObjectParameter("HorayFecha", typeof(System.DateTime));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_BancoExteno_Insert", cuentaBancoExParameter, cuentaInternaParameter, detalleTransParameter, horayFechaParameter, montoParameter);
        }
    
        public virtual int pa_BancoExteno_Update(string cuentaBancoEx, string cuentaInterna, string detalleTrans, Nullable<System.DateTime> horayFecha, Nullable<int> monto)
        {
            var cuentaBancoExParameter = cuentaBancoEx != null ?
                new ObjectParameter("CuentaBancoEx", cuentaBancoEx) :
                new ObjectParameter("CuentaBancoEx", typeof(string));
    
            var cuentaInternaParameter = cuentaInterna != null ?
                new ObjectParameter("CuentaInterna", cuentaInterna) :
                new ObjectParameter("CuentaInterna", typeof(string));
    
            var detalleTransParameter = detalleTrans != null ?
                new ObjectParameter("DetalleTrans", detalleTrans) :
                new ObjectParameter("DetalleTrans", typeof(string));
    
            var horayFechaParameter = horayFecha.HasValue ?
                new ObjectParameter("HorayFecha", horayFecha) :
                new ObjectParameter("HorayFecha", typeof(System.DateTime));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_BancoExteno_Update", cuentaBancoExParameter, cuentaInternaParameter, detalleTransParameter, horayFechaParameter, montoParameter);
        }
    
        public virtual int pa_Cliente_AbonoRetiroExterno(string cuentaSimpe, string descripcion, Nullable<int> saldoCuenta)
        {
            var cuentaSimpeParameter = cuentaSimpe != null ?
                new ObjectParameter("CuentaSimpe", cuentaSimpe) :
                new ObjectParameter("CuentaSimpe", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var saldoCuentaParameter = saldoCuenta.HasValue ?
                new ObjectParameter("SaldoCuenta", saldoCuenta) :
                new ObjectParameter("SaldoCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Cliente_AbonoRetiroExterno", cuentaSimpeParameter, descripcionParameter, saldoCuentaParameter);
        }
    
        public virtual int pa_Cliente_AbonoRetiroInterno(string cuentaInterna, string descripcion, Nullable<int> saldoCuenta)
        {
            var cuentaInternaParameter = cuentaInterna != null ?
                new ObjectParameter("CuentaInterna", cuentaInterna) :
                new ObjectParameter("CuentaInterna", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var saldoCuentaParameter = saldoCuenta.HasValue ?
                new ObjectParameter("SaldoCuenta", saldoCuenta) :
                new ObjectParameter("SaldoCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Cliente_AbonoRetiroInterno", cuentaInternaParameter, descripcionParameter, saldoCuentaParameter);
        }
    
        public virtual ObjectResult<pa_Cliente_Buscar_Result> pa_Cliente_Buscar(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_Cliente_Buscar_Result>("pa_Cliente_Buscar", cedulaParameter);
        }
    
        public virtual int pa_Cliente_Delete(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Cliente_Delete", cedulaParameter);
        }
    
        public virtual int pa_Cliente_Insert(string cedula, string nombre, string apellido1, string apellido2, Nullable<System.DateTime> fechaNac, string telefono, string correo, string provincia, string direccionExac, Nullable<int> saldoCuenta, string contrasena, string cuentaInterna, string cuentaSimpe, string descripcion, Nullable<bool> estado)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var direccionExacParameter = direccionExac != null ?
                new ObjectParameter("DireccionExac", direccionExac) :
                new ObjectParameter("DireccionExac", typeof(string));
    
            var saldoCuentaParameter = saldoCuenta.HasValue ?
                new ObjectParameter("SaldoCuenta", saldoCuenta) :
                new ObjectParameter("SaldoCuenta", typeof(int));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var cuentaInternaParameter = cuentaInterna != null ?
                new ObjectParameter("CuentaInterna", cuentaInterna) :
                new ObjectParameter("CuentaInterna", typeof(string));
    
            var cuentaSimpeParameter = cuentaSimpe != null ?
                new ObjectParameter("CuentaSimpe", cuentaSimpe) :
                new ObjectParameter("CuentaSimpe", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Cliente_Insert", cedulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, fechaNacParameter, telefonoParameter, correoParameter, provinciaParameter, direccionExacParameter, saldoCuentaParameter, contrasenaParameter, cuentaInternaParameter, cuentaSimpeParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual int pa_Cliente_Update(string cedula, string nombre, string apellido1, string apellido2, Nullable<System.DateTime> fechaNac, string telefono, string correo, string provincia, string direccionExac, string contrasena, Nullable<bool> estado)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var direccionExacParameter = direccionExac != null ?
                new ObjectParameter("DireccionExac", direccionExac) :
                new ObjectParameter("DireccionExac", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Cliente_Update", cedulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, fechaNacParameter, telefonoParameter, correoParameter, provinciaParameter, direccionExacParameter, contrasenaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<pa_ConsultaSaldos_Result> pa_ConsultaSaldos(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ConsultaSaldos_Result>("pa_ConsultaSaldos", cedulaParameter);
        }
    
        public virtual ObjectResult<pa_EstadosdeCuenta_Result> pa_EstadosdeCuenta(string cuentaInterna)
        {
            var cuentaInternaParameter = cuentaInterna != null ?
                new ObjectParameter("CuentaInterna", cuentaInterna) :
                new ObjectParameter("CuentaInterna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_EstadosdeCuenta_Result>("pa_EstadosdeCuenta", cuentaInternaParameter);
        }
    
        public virtual ObjectResult<pa_Globales_Result> pa_Globales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_Globales_Result>("pa_Globales");
        }
    
        public virtual ObjectResult<pa_Login_Result> pa_Login(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_Login_Result>("pa_Login", usuarioParameter, contrasenaParameter);
        }
    
        public virtual int pa_Servicio_Delete(string descServicio)
        {
            var descServicioParameter = descServicio != null ?
                new ObjectParameter("DescServicio", descServicio) :
                new ObjectParameter("DescServicio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Servicio_Delete", descServicioParameter);
        }
    
        public virtual int pa_Servicio_Insert(string descServicio, Nullable<bool> estado)
        {
            var descServicioParameter = descServicio != null ?
                new ObjectParameter("DescServicio", descServicio) :
                new ObjectParameter("DescServicio", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Servicio_Insert", descServicioParameter, estadoParameter);
        }
    
        public virtual int pa_Servicio_Update(string descServicio, Nullable<bool> estado)
        {
            var descServicioParameter = descServicio != null ?
                new ObjectParameter("DescServicio", descServicio) :
                new ObjectParameter("DescServicio", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Servicio_Update", descServicioParameter, estadoParameter);
        }
    
        public virtual ObjectResult<pa_TransaccionesRegistradas_Result> pa_TransaccionesRegistradas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_TransaccionesRegistradas_Result>("pa_TransaccionesRegistradas");
        }
    
        public virtual ObjectResult<pa_Usuario_Buscar_Result> pa_Usuario_Buscar(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_Usuario_Buscar_Result>("pa_Usuario_Buscar", usuarioParameter);
        }
    
        public virtual int pa_Usuario_Delete(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Usuario_Delete", usuarioParameter);
        }
    
        public virtual int pa_Usuario_Insert(string usuario, string nombre, string contrasena, string perfil, Nullable<bool> estado)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Usuario_Insert", usuarioParameter, nombreParameter, contrasenaParameter, perfilParameter, estadoParameter);
        }
    
        public virtual int pa_Usuario_Update(string usuario, string nombre, string contrasena, string perfil, Nullable<bool> estado)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_Usuario_Update", usuarioParameter, nombreParameter, contrasenaParameter, perfilParameter, estadoParameter);
        }
    
        public virtual ObjectResult<pa_VerEstadoClientes_Result> pa_VerEstadoClientes(Nullable<bool> estado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_VerEstadoClientes_Result>("pa_VerEstadoClientes", estadoParameter);
        }
    
        public virtual ObjectResult<pa_VerEstadoUsuarios_Result> pa_VerEstadoUsuarios(Nullable<bool> estado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_VerEstadoUsuarios_Result>("pa_VerEstadoUsuarios", estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pa_TotalGlobales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pa_TotalGlobales");
        }
    }
}
